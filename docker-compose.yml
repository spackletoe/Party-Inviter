version: '3.8'

services:
  db:
    image: mysql:8.0
    container_name: party-inviter-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-party123}
      MYSQL_DATABASE: ${DB_NAME:-party_inviter}
      MYSQL_USER: ${DB_USER:-party_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-party123}
    volumes:
      - db_data:/var/lib/mysql
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: party-inviter-api
    restart: unless-stopped
    environment:
      - DATABASE_URL=mysql://${DB_USER:-party_user}:${DB_PASSWORD:-party123}@db:3306/${DB_NAME:-party_inviter}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin123}
      - ADMIN_JWT_SECRET=${ADMIN_JWT_SECRET:-change-me-admin}
      - GUEST_JWT_SECRET=${GUEST_JWT_SECRET:-change-me-guest}
      - BCRYPT_ROUNDS=${BCRYPT_ROUNDS:-10}
      - PORT=4000
      - CORS_ORIGIN=${CORS_ORIGIN:-http://localhost:3000}
      - MAIL_TO=${MAIL_TO}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - MAILGUN_API_KEY=${MAILGUN_API_KEY}
      - MAILGUN_DOMAIN=${MAILGUN_DOMAIN}
      - FRONTEND_URL=${FRONTEND_URL}
    ports:
      - "4000:4000"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: party-inviter-frontend
    restart: unless-stopped
    environment:
      - VITE_API_BASE_URL=${VITE_API_BASE_URL:-http://localhost:4000}
    ports:
      - "5173:80"
    depends_on:
      - api

volumes:
  db_data: